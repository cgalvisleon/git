# Git config

git config --global alias.l "log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
git config --global alias.s "status -s -b"
git config --global alias.prepare "! git add .; git commit -m Prepare"
git config --global alias.backup "! git add .; git commit -m 'Backup'; git push -u origin $1"
git config --global alias.review "! git add .; git commit -m 'Review'; git push -u origin $1"
git config --global alias.merge "! git add .; git commit -m 'Merge'; git push -u origin $1"
git config --global alias.deploy "! git add .; git commit -m 'Deploy'; git push -u origin $1"
git config --global alias.fix "! git add .; git commit -m 'Fixing'; git push -u origin $1"
git config --global alias.bring "! git pull origin $1"
git config --global alias.get "! git pull origin $1"
git config --global alias.prepare "! git add .; git commit -m 'Prepare'"

git config --global alias.jbackup "! git add .; git commit -m 'Backup'; git push -u josephine $1"
git config --global alias.jreview "! git add .; git commit -m 'Review'; git push -u josephine $1"
git config --global alias.jmerge "! git add .; git commit -m 'Merge'; git push -u josephine $1"
git config --global alias.jdeploy "! git add .; git commit -m 'Deploy'; git push -u josephine $1"
git config --global alias.jfix "! git add .; git commit -m 'Fixing'; git push -u josephine $1"
git config --global alias.jbring "! git pull josephine $1"

# Comando basicos
git config --global alias.l "log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
git config --global alias.s "status -s -b"
git config --global alias.get "! git pull origin $1"
git config --global alias.getall "! git pull origin"
git config --global alias.new "! git checkout -b $1"
git config --global alias.set "! git checkout $1"
git config --global alias.del "! git branch -D $1"
git config --global alias.lb "! git branch -v"
git config --global alias.main "! git branch -M main"
git config --global alias.pb "! git push --set-upstream origin $1"

git config --global alias.prepare "! git add .; git commit -m Prepare"
git config --global alias.feat '! feat() { git add . && git commit -m "feat:$1" && git push -u origin; }; feat'
git config --global alias.review '! review() { git add . && git commit -m "review:$1" && git push -u origin; }; review'
git config --global alias.fix '! fix() { git add . && git commit -m "fix:$1" && git push -u origin; }; fix'
git config --global alias.bug '! bug() { git add . && git commit -m "bug:$1" && git push -u origin; }; bug'
# Basic commands
git config --global alias.initial "! git add .; git commit -m 'Initial'; git push -u origin --all"
git config --global alias.update "! git add .; git commit -m 'Update'; git push -u origin $1"
git config --global alias.upd "! git add .; git commit -m 'Update'; git push -u origin $1"
git config --global alias.backup "! git add .; git commit -m 'Backup'; git push -u origin $1"
#Reset commit and preserve changes
git config --global alias.rhs 'reset HEAD^ --soft'
#Reset commit and discard changes
git config --global alias.rhh 'reset HEAD^ --hard' 
git config --global alias.clean 'git rm -r --cached .'
git config --global alias.tags "! git push -u origin --tags"

git config --global user.email "cgalvisleon@gmail.com"
git config --global user.name "Cesar Galvis Leon"

git config user.email "cgalvisl@celsia.com"
git config user.name "Cesar Galvis Leon"

git branch -a

alias feat='bash sh.sh $1 $2'

git config --global init.defaultBranch main

git branch -M main
git push -u origin --all

git rm -r --cached .

git rebase origin/<nombre-de-tu-rama>


## Git
```
git push --set-upstream origin

git add .;
git commit -m 'Review';
git push -u origin $1;

git push -u ofigin --force;
```

## Merge
```
git rhs #Reset commit and preserve changes
git rhh #Reset commit and discard changes

git reset HEAD^ --hard
git reset HEAD^ --soft

git reset <id> --hard
git reset <id> --soft

git branch -v #Listar ramas

git merge <rama>
git merge -X theirs <rama>
git rebase origin/<rama>
git checkout origin/<rama> -- <filename>

git checkout origin/nicolas -- pkg/fauresAreas/controlador.go
```

## Tags
```
git tag clase.2
git push -u origin --tags

Used abbreviation
git tags
```